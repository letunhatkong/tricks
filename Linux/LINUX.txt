<!-- Copy and Rsync in Linux -->
=========== Copy
cp -avpr fromFolder toFolder
-a : Preserve the specified attributes such as directory an file mode, ownership, timestamps, if possible additional attributes: context, links, xattr, all.
-v : Explain what is being done.
-r : Copy directories recursively.

=========== Rsync
rsync -avz fromFolder toFolder
-a : Archive mode i.e. copy a folder with all its permission and other information including recursive copy.
-v : Verbose mode.
-z : With this option, rsync compresses the file data as it is sent to the destination machine, which reduces the amount of data being transmitted — something that is useful over a slow connection.
-P : View informations

=========== TAR - ZIP UNZIP
Nén: tar -zcvf tên_file folder_cần_nén
Nén zip: zip archivename.zip file1 file2 folder1
zip -r archivename.zip folder/

Giải nén: tar -xvf file_nén
giải nén đến 1 thư mục nào đó: unzip file.zip -d destination_folder
tar -xvf file -C folder

=========== Kiểm tra kích thước của folder linux 
du -sh folder/

=========== Kiểm tra dung lượng ổ cứng của server
df // xxx ~ Đơn vị tính là KB. Lấy số này chia cho 1024*1024 là ra số GB.

=========== Rename folder 
mv folder-old folder-new



============ APACHE ============
Linux Amazone RMI
sudo service httpd stop / start / restart / status
httpd -v

UBUNTU
sudo service apache2 stop / start / restart / status
apache2 -v

============ MYSQL ============
sudo service mysql start / stop / restart 
sudo service mysqld start / stop / restart
sudo /etc/init.d/mysqld start / stop / restart

Trên linux, socket nó cũng là file thôi. Bị lỗi socket thì thường là do số lượng kết nối vô nhiều -> tới ngưỡng open files. Kiểm tra nếu là ổ SSD thì tăng openfiles lên thôi 

Tài nguyên server có hạn, cũng không thể tăng mãi được :D
Phải profiler để tính toán chia tài nguyên cho mỗi dịch vụ
Ví dụ 2GiB RAM, thì chia bao nhiêu % cho webserver, bao nhiêu % cho php-fpm, bao nhiêu % cho MySQL
Nếu được thì setup thêm memcached vô Rồi cấu hình nginx cho cache dữ liệu từ php-fpm về

Backup db mysql: mysqldump -u tradebanner -p tradebanner2 > backup_name.sql
Import db.sql vao db. Tạo database trống trên MySQL
Terminal: mysql -u root -p db_name < db.sql

mysql -u tradebanner -p wp3 < 

===== Tăng openfiles
Check:
cat /proc/sys/fs/file-max
cat /proc/sys/fs/file-max
Hard Limit: ulimit -Hn
Soft Limit: ulimit -Sn
show all: ulimit -a

Step 1:
sudo nano /etc/sysctl.conf 
add line: fs.file-max = 2097152
sudo sysctl -p

Step 2:
sudo nano /etc/security/limits.conf
Thêm dòng code, 999999 có thể worked:
*         hard    nofile      500000
*         soft    nofile      500000
root      hard    nofile      500000
root      soft    nofile      500000

Logout and login again, reCheck:
cat /proc/sys/fs/file-max
Hard Limit: ulimit -Hn
Soft Limit: ulimit -Sn
ulimit -a

==== Bug 
/etc/rc.d/init.d/functions: fork: Cannot allocate memory



=========== Config Nginx
Edit file config
sudo nano /etc/nginx/nginx.conf

"worker_processes" defines how many concurrent processes that Nginx will use.

In http block

server { # simple reverse-proxy
  listen       80;
  server_name  domain2.com www.domain2.com;
  access_log   logs/domain2.access.log  main;

  # serve static files
  location ~ ^/(images|javascript|js|css|flash|media|static)/  {
    root    /var/www/virtual/big.server.com/htdocs;
    expires 30d;
  }

  # pass requests for dynamic content to rails/turbogears/zope, et al
  location / {
    proxy_pass      http://127.0.0.1:8080;
  }
}

=========== VI =====
Ctrl-b | Go back one page
Ctrl-f | Go forward one page
x | Delete the character the cursor is on
Shift-x | Delete the character before the cursor
dd  | Delete the current line
Shift-d | Delete everything from the cursor to the end of the line
u | Undelete a line you just deleted
Shift-u | Undo all changes to the current line
Shift-z-z | Save your file and exit the vi editor

=========== Convert .ppk to .pem 
puttygen bplnew.ppk -O private-openssh -o bplnew.pem


<!-- nodeJS + NPM install -->
sudo apt-get install python-software-properties
sudo apt-add-repository ppa:chris-lea/node.js
sudo apt-get update
sudo apt-get install nodejs

6.x
sudo apt-get install python-software-properties
curl -sL https://deb.nodesource.com/setup_6.x | sudo -E bash -
sudo apt-get install nodejs

4.x
curl -sL https://deb.nodesource.com/setup_4.x | sudo -E bash -
sudo apt-get install -y nodejs

Or (Recommended):
sudo apt-get install nodejs
sudo apt-get install npm

Check:
node -v
npm -v

Remove nodejs
sudo apt-get --purge remove nodejs
sudo apt-get autoremove
sudo apt-get purge nodejs && sudo apt-get autoremove && sudo apt-get autoclean

update node:
sudo npm cache clean -f
sudo npm install -g n
sudo n stable 

If you type "node -v" and receive a message: The program 'node' can be found in the following packages. Step by step:
1. Run: which node
and in my case it displayed /usr/sbin/node.
2. If it says command not found, skip to 3. Remove it by
sudo rm /usr/sbin/node
3. Run: which nodejs
in my case it displayed /usr/bin/nodejs
4. Make a link
sudo ln -s /usr/bin/nodejs /usr/bin/node
OR
sudo ln -s /usr/bin/nodejs /usr/sbin/node
Re-check: node -v
sudo ln -s thu_muc_se_symlink_toi thu_muc_symlink


===========================================================
Redis
Reference: http://blog.chungkol.com/2014/03/nosql-how-to-install-redis-server-from.html

Step 1. Before you install redis, there are a couple of prerequisites that need to be downloaded to make the installation as easy as possible:
sudo apt-get update
sudo apt-get install build-essential
sudo apt-get install tcl8.5

Step 2. Goto redis.io and get stable release version of redis
sudo wget http://download.redis.io/releases/redis-2.8.17.tar.gz
tar -xvf redis-2.8.17.tar.gz
cd redis-2.8.17/src
sudo make install

Step 3. Install redis server by script
cd ../utils
sudo ./install_server.sh
Enter ...

Step 4. Start and stop redis services:
sudo /etc/init.d/redis_6379 start
sudo /etc/init.d/redis_6379 stop

Step 5. Access to redis command line
redis-cli
Notes: if old redis is running, stop it before install.

 redis-server --version

===========================================================

Redis-commander

Step 0: If you dont' have NPM
sudo apt-get install npm

Install:
sudo chown -R $USER /usr/local
sudo npm install -g redis-commander

redis-commander

===========================================================
MongoDB

INSTALL:
sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv EA312927
Ubuntu 12.04: 
echo "deb http://repo.mongodb.org/apt/ubuntu precise/mongodb-org/3.2 multiverse" | sudo tee /etc/apt/sources.list.d/mongodb-org-3.2.list
Ubuntu 14.04:
echo "deb http://repo.mongodb.org/apt/ubuntu trusty/mongodb-org/3.2 multiverse" | sudo tee /etc/apt/sources.list.d/mongodb-org-3.2.list
Ubuntu 16.04:
echo "deb http://repo.mongodb.org/apt/ubuntu xenial/mongodb-org/3.2 multiverse" | sudo tee /etc/apt/sources.list.d/mongodb-org-3.2.list

sudo apt-get update
sudo apt-get install -y mongodb-org
mongod --version

UNINSTALL: 
sudo apt-get remove mongodb* --purge
or: 
sudo apt-get purge mongodb-org
sudo apt-get autoremove
sudo rm -rf /var/log/mongodb /var/lib/mongodb

Command
sudo service mongod start
sudo service mongod stop
sudo service mongod restart

UI AdminMongo: https://github.com/mrvautin/adminMongo
mongodb://root:root@127.0.0.1:27017

Doc: http://docs.mongodb.org/manual/tutorial/getting-started/
The MongoDB instance stores: /var/lib/mongodb
Log files in/var/log/mongodb/mongod.log
Alternate log and data file directories in: /etc/mongod.conf. See systemLog.path and storage.dbPath for additional information.
Nếu thay đổi user thì phải thay đổi permission của các thư mục sau: /var/lib/mongodb and /var/log/mongodb

+ BUG: connect to 127.0.0.1:27017, reason: errno:111 Connection refused
Xem thử mongoDB có start được ko: sudo netstat -tulpn
Nếu start mà ko chạy thì vào file log /var/log/mongodb/mongod.log xem log. 
Nếu nó báo: Failed to unlink socket file /tmp/mongodb-27017.sock errno:1 Operation not permitted. Ta cần xóa bằng tay file đó. 

CODE in MONGOD
+ Access mongoDB on terminal: mongo
+ Show database: show dbs
+ Set rootDB user:
use sml
db.createUser({ user: "smlRoot",
  pwd: "SmlR00t",
  roles: [ { role: "dbOwner", db: "sml" } ]
})

===========================================================
Forever

sudo npm install forever -g
forever --version

Start server

node /data/HGTV/server.js
forever start -a /data/HGTV/server.js
forever stop -a /data/HGTV/server.js
forever restart -a /data/HGTV/server.js

===========================================================
Maven

sudo apt-get install maven
mvn -v

===========================================================
Nginx

sudo apt-get update
sudo apt-get install nginx
nginx -v

sudo service nginx stop
sudo service nginx start
sudo service nginx restart

We can make sure that our web server will restart automatically when the server is rebooted by typing:
sudo update-rc.d nginx defaults

This should already be enabled by default, so you may see a message like this:
System start/stop links for /etc/init.d/nginx already exist.

===========================================================
PHP

sudo apt-get update
sudo apt-get install php5 php5-mhash php5-mcrypt php5-curl php5-cli php5-gd libcurl3 php5-intl php5-xsl php5-mysql
php -v

sudo apt-get -y update; sudo add-apt-repository ppa:ondrej/php; sudo apt-get -y update; sudo apt-get install -y php7.0 libapache2-mod-php7.0 php7.0 php7.0-common php7.0-gd php7.0-mysql php7.0-mcrypt php7.0-curl php7.0-intl php7.0-xsl php7.0-mbstring php7.0-zip php7.0-bcmath php7.0-iconv;

=========================================



<!-- Hot Key Ubuntu -->
New tab -> Ctrl+T
New window -> Ctrl+N
New folder -> Shift+Ctrl+N
Open folder in new tab -> Shift+Return
Properties -> Alt+Return
Close window -> Ctrl+W
Close all windows (quit) -> Ctrl+Q
Make link -> Ctrl+M
Add bookmark -> Ctrl+D
Edit bookmarks -> Ctrl+B
Undo -> Ctrl+Z
Redo -> Ctrl+Y
Cut -> Ctrl+X
Copy -> Ctrl+C
Paste -> Ctrl+V
Select all -> Ctrl+A
Select items matching -> Ctrl+S
Invert selection -> Shift+Ctrl+I
Show hidden files -> Ctrl+H
Zoom in -> Ctrl++
Zoom out -> Ctrl+-
Normal size -> Ctrl+0
List view -> Ctrl+1
Icons view -> Ctrl+2
Go to home directory -> Alt+Home
Go to parent directory -> Alt+Up Arrow
Go back -> Alt+Left Arrow
Go forward -> Alt+Right Arrow
Go to specified location -> Ctrl+L
Search files (find) -> Ctrl+F


===========================
<!-- Create file: name.desktop and edit file with gedit -->
[Desktop Entry]
Version=1.0
Name=GrooveNet (app name)
Comment=Launch GrooveNet
Exec=/Downloads/GrooveNet-master/project/bin/groovenet (file link)
Icon=/path/to/icon.png (icon link)
Terminal=true (or false)
Type=Application
Categories=Utility;Application;

Rename file to *.desktop
Right click -> Properties -> permissions -> Check Allow executing file as program

============================
<!-- PHP Storm 10 key -->
http://idea.lanyus.com


<!-- ============================ -->
<!-- Monit -->
sudo apt-get install monit
sudo yum install monit (linux)
monit --version

Conmand:
sudo /etc/init.d/monit start
sudo /etc/init.d/monit restart
sudo /etc/init.d/monit stop
sudo monit start all
sudo monit stop all
sudo monit -t <!-- Check syntax -->
sudo monit reload <!-- ReLoad monit config -->

File config: /etc/monit/monitrc
vi /etc/monit.conf

set httpd port 2812
    use address localhost  # only accept connection from localhost
    allow 0.0.0.0/0.0.0.0        # allow localhost to connect to the server and
    allow admin:int3rn@$3      # require user 'admin' with password 'int3rn@$3'

set httpd port 2812
  use address localhost  # only accept connection from localhost
  allow localhost       # allow localhost to connect to the server and
  allow samuel:kong      # require user 'samuel' with password 'kong'
  allow @monit           # allow users of group 'monit' to connect (rw)
  allow @users readonly  # allow users of group 'users' to connect readonly

#Apache:
check process apache with pidfile /run/apache2.pid
    start program = "/etc/init.d/apache2 start" with timeout 60 seconds
    stop program  = "/etc/init.d/apache2 stop"

check process apache with pidfile /var/run/apache2/apache2.pid
  group www
  start program = "/etc/init.d/apache2 start"
  stop program  = "/etc/init.d/apache2 stop"
  if failed host localhost port 80 then restart

#MySQL
check process mysqld with pidfile /var/run/mysqld/mysqld.pid
    start program = "/etc/init.d/mysql start"
    stop program = "/etc/init.d/mysql stop"

check process mysqld with pidfile /var/run/mysqld/mysqld.pid
group mysql
start program = "/etc/init.d/mysqld start"
stop program = "/etc/init.d/mysqld stop"
if failed host 127.0.0.1 port 3306 then restart
if 5 restarts within 5 cycles then timeout

#Nginx
check process nginx with pidfile /var/run/nginx.pid
    start program = "/etc/init.d/nginx start"
    stop program = "/etc/init.d/nginx stop"

<!-- ============================ -->

<!-- CRON JOB -->
############ Install:
## Ubuntu: sudo apt-get install cron
## Centos / RedHat / Linux
sudo yum update
sudo yum install vixie-cron crontabs

Edit file cron: crontab -e
View command file: crontab -l

* * * * * /path/to/command
minute hour day-of-month month day-of-week

30 17 * * 1 /path/to/command: 17h30 monday every week.
*/15 * * * *: every 15 minutes
<!-- ============================ -->

<!-- Add extension ioncube loader -->
Download Cube file: wget http://downloads3.ioncube.com/loader_downloads/ioncube_loaders_lin_x86-64.tar.gz
php5-fpm: sudo apt-get install php5-fpm
Check php version and extension directory: php -i | grep extension_dir (extension_dir => /usr/lib/php5/20131226 => /usr/lib/php5/20131226)
Copy file into extension directory: cp /tmp/ioncube/ioncube_loader_lin_5.6.so /usr/lib/php5/20131226/

Add Path zend_extensions into php.ini: zend_extension = /usr/lib/php5/20131226/ioncube_loader_lin_5.6.so
/etc/php5/apache2/php.ini
/etc/php5/cli/php.ini
/etc/php5/cgi/php.ini
/etc/php5/fpm/php.ini

service apache2 restart
service php5-fpm restart
php -v

=============
Check Amazone Linux version
cat /etc/system-release

============= EC2 AWS
Để nguyên server hiện tại, dettach cái ổ cứng cũ
Tạo snapshot từ cái ổ cứng cũ đó
Xong tạo volume mới từ cái snapshot được tạo ra, chọn size mới
Xong attach lại vô instance cũ

stop cái server. Kiểm tra Root device và Block devices. Ghi nhớ lại ví dụ: /dev/sda1, /dev/sdf
detach cái EBS volume của server.
create snapshot từ cái volumn mới dettach.
create volume from snapshot (chú ý zone phải cùng với server ban đầu)
attach to EC2, start instance

- Dettach HDD from instance
Open the Amazon EC2 console at https://console.aws.amazon.com/ec2/.
In the navigation pane, choose Volumes.
Select a volume and choose Actions, Detach Volume.
In the confirmation dialog box, choose Yes, Detach.
